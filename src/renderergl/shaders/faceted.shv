#ifdef OPENGL3

in vec4 vPosition;
in vec3 vNormal;
in vec4 vColor;

uniform mat4 uMvp;
uniform mat3 uNormal;
uniform vec4 uColor;
uniform vec3 uLightDirection;
uniform vec4 uLightColor;

out vec4 oiColor;

void main()
{
    vec3 normalTrans = normalize(uNormal * vNormal);
    float intensity = max(dot(normalTrans, uLightDirection), 0.0);
    intensity += min(intensity + 0.3, 1.0);
    //oiColor = vec4(1.0, 0.0, 0.0, 1.0);//intensity * uColor;
    oiColor = vColor * (intensity * 1.5);
    //vColor = vec4((uNormal * vNormal), 1.0);
    //vColor = vec4(dot(uLightDirection, normalTrans));
    //vColor = abs(dot(uLightDirection, normalTrans)) * uColor;
    //vColor = vec4(abs(uLightDirection), 1.0);
    //vColor = 0.5 * uColor;
    //vColor = vec4(1.0, 1.0, 0.0, 0.6);
    gl_Position = uMvp * vPosition;
};


#else //#ifdef OPENGL3
#ifdef PLATFORM_IOS
precision mediump float;
#endif
attribute vec4 vPosition;
attribute vec3 vNormal;

uniform mat4 uMvp;
uniform mat3 uNormal;
uniform vec4 uColor;
uniform vec3 uLightDirection;
uniform vec4 uLightColor;

varying vec4 vColor

void main()
{
    vec3 normalTrans = normalize(uNormal * vNormal);
    float intensity = max(dot(normalTrans, uLightDirection), 0.0);
    intensity += min(intensity + 0.3, 1.0);
    vColor = intensity * uColor;
    gl_Position = mvp * vPosition;
};
#endif //#else //#ifdef OPENGL3
