//------------------------------------------------------------------------------
// shapes.cmp - Simple faceted shapes, constructed algorithmically
//
// Gaen Concurrency Engine - http://gaen.org
// Copyright (c) 2014-2020 Lachlan Orr
//
// This software is provided 'as-is', without any express or implied
// warranty. In no event will the authors be held liable for any damages
// arising from the use of this software.
//
// Permission is granted to anyone to use this software for any purpose,
// including commercial applications, and to alter it and redistribute it
// freely, subject to the following restrictions:
//
//   1. The origin of this software must not be misrepresented; you must not
//   claim that you wrote the original software. If you use this software
//   in a product, an acknowledgment in the product documentation would be
//   appreciated but is not required.
//
//   2. Altered source versions must be plainly marked as such, and must not be
//   misrepresented as being the original software.
//
//   3. This notice may not be removed or altered from any source
//   distribution.
//------------------------------------------------------------------------------

component Box
{
    int #stage = #default;
    int #pass = #opaque;
    vec3 #size = vec3{1.0, 1.0, 1.0};
    color #diffuse = color{255, 0, 0, 255};
    int modelUid = $.shape_box(stage, pass, size, diffuse, mat43{1.0});
}

component Cone
{
    int #stage = #default;
    int #pass = #opaque;
    vec3 #size = vec3{1.0, 1.0, 1.0};
    int #slices = 16;
    color #diffuse = color{255, 0, 0, 255};
    int modelUid = $.shape_cone(stage, pass, size, slices, diffuse, mat43{1.0});
}

component Cylinder
{
    int #stage = #default;
    int #pass = #opaque;
    vec3 #size = vec3{1.0, 1.0, 1.0};
    int #slices = 16;
    color #diffuse = color{255, 0, 0, 255};
    int modelUid = $.shape_cylinder(stage, pass, size, slices, diffuse, mat43{1.0});
}

component Sphere
{
    int #stage = #default;
    int #pass = #opaque;
    vec3 #size = vec3{1.0, 1.0, 1.0};
    int #sections = 16;
    int #slices = 16;
    color #diffuse = color{255, 0, 0, 255};
    int modelUid = $.shape_sphere(stage, pass, size, slices, sections, diffuse, mat43{1.0});
}

component QuadSphere
{
    int #stage = #default;
    int #pass = #opaque;
    vec3 #size = vec3{1.0, 1.0, 1.0};
    int #sections = 16;
    color #diffuse = color{255, 0, 0, 255};
    handle model;
    int modelUid = $.shape_quad_sphere(stage, pass, size, sections, diffuse, mat43{1.0});
}
